meanfield
varlab
library(faraway)
data(pipeline)
model = lm(Lab ~ Field, data=pipeline)
# Part(b)
i = order(pipeline$Field)
npipe = pipeline[i,]
ff = gl(n=12, k=9)[-108] # generate levels and remove last factor
meanfield = unlist(lapply(split(npipe$Field,ff),mean))
varlab = unlist(lapply(split(npipe$Lab,ff),var))
model_log = lm(log(varlab) ~ log(meanfield))
summary(model_log)
plot(log(meanfield, log(varlab)))
plot(log(meanfield), log(varlab))
varlab
varlab[-12]
plot(log(meanfield), log(varlab[-12]))
plot(log(meanfield[-12]), log(varlab[-12]))
model_log = lm(log(varlab[-12]) ~ log(meanfield[-12]))
summary(model_log)
plot(log(meanfield), log(varlab))
model_log = lm(log(varlab[-12]) ~ log(meanfield[-12]))
summary(model_log)
model_weighted = lm(Lab ~ Field, data=pipeline, weights=1/Field^1.67)
summary(model_weighted)
library(xtable)
xtable(summary(model_weighted))
plot(model_weighted)
model = lm(stack.loss ~ ., data=stackloss)
summary(model)
rlm(stack.loss ~ ., data=stackloss)
library(MASS)
rlm(stack.loss ~ ., data=stackloss)
model_huber = rlm(stack.loss ~ ., data=stackloss)
summary(model_huber)
model_ls
model_ls = lm(stack.loss ~ ., data=stackloss)
model_ls
summary(model_ls)
model_lad = rq(stack.loss ~ ., data=stackloss)
library(quantreg)
model_lad = rq(stack.loss ~ ., data=stackloss)
summary(model_lad)
xtable(summary(model_ls))
model_lad = rq(stack.loss ~ ., data=stackloss)
summary(model_lad)
xtable(summary(model_lad))
model_lad
xtable(summary(model_lad))
summary(model_huber)
xtable(summary(model_huber))
library(robustbase)
install.packages('robustbase')
model_lts = ltsReg(stack.loss ~ ., data=stackloss)
summary(model_lts)
model_lts = ltsReg(stack.loss ~ ., data=stackloss)
library(robustbase)
model_lts = ltsReg(stack.loss ~ ., data=stackloss)
summary(model_lts)
xtable(summary(model_lts))
# Problem 2
data(stackloss)
model_ls = lm(stack.loss ~ ., data=stackloss)
# LAD
library(quantreg)
model_lad = rq(stack.loss ~ ., data=stackloss)
# Huber's method
library(MASS)
model_huber = rlm(stack.loss ~ ., data=stackloss)
# Least trimmed squares
library(robustbase)
model_lts = ltsReg(stack.loss ~ ., data=stackloss)
summary(model_lts)
summary(model_ls)
summary(model_lad)
model_lad
plot(model_lts)
plot(model_ls)
hatv = hatvalues(model_ls)
halfnorm(hatv, ylab="Leverages")
library(binomTools)
install.packages('binomTools')
halfnorm(hatv, ylab="Leverages")
library(binomTools)
hatv = hatvalues(model_ls)
halfnorm(hatv, ylab="Leverages")
library(binomTools)
hatv = hatvalues(model_ls)
halfnorm(hatv, labs=row.names(stackloss),ylab="Leverages")
halfnorm(hatv)
halfnorm(model_ls)
hatv
halfnorm(lm.influence(model_ls))
halfnorm(lm.influence(model_ls)$hat)
lm.influence(model_ls)$hat
halfnorm(cooks.distance(model_ls))
?halfnorm
halfnorm(model_ls, resType='pearson')
library(book)
install.packages('book')
plot(model_ls)
?book
??book
?faraway
??faraway
stackloss
model_ls2 = lm(stack.loss ~ ., data=stackloss[-21])
summary(model_ls2)
summary(model_ls)
stackloss2 = stackloss[-21]
stackloss2
stackloss2 = stackloss[1:20,]
stackloss2
model_ls2 = lm(stack.loss ~ ., data=stackloss2)
summary(model_ls2)
summary(model_ls)
plot(model_ls2)
stackloss3 = stackloss[[-4],]
stackloss3 = stackloss[c(-4),]
stackloss3
model_ls3 = lm(stack.loss ~., data=stackloss3)
plot(model_ls3)
stackloss3 = stackloss2[c(-4),]
model_ls3 = lm(stack.loss ~., data=stackloss3)
plot(model_ls3)
stackloss3 = stackloss2[c(-1,-2,-4),]
model_ls3 = lm(stack.loss ~., data=stackloss3)
plot(model_ls3)
stackloss3 = stackloss2[c(-1,-2,-3,-4),]
model_ls3 = lm(stack.loss ~., data=stackloss3)
plot(model_ls3)
stackloss3 = stackloss2[c(-4),]
model_ls3 = lm(stack.loss ~., data=stackloss3)
plot(model_ls3)
stackloss3 = stackloss2[c(-4),]
model_ls3 = lm(stack.loss ~., data=stackloss3)
xtable(summary(model_ls3))
library(xtable)
xtable(summary(model_ls3))
library(ggplot2)
# Read data
setwd('Flappy Bird')
setwd('Flappy Bird')
anthony <- read.table("scores_Anthony.txt", quote="\"")
anthony$index = 1:nrow(anthony)
anthony$highscore = 0
colnames(anthony) = c("Score", "Index", "High_Score")
max = 0
high_scores = c()
high_index = c()
for(i in 1:nrow(anthony)){
if(anthony$Score[i]>max){
high_scores = c(high_scores, anthony$Score[i])
high_index = c(high_index, i)
max = anthony$Score[i]
anthony[i, 3] = 1
}
}
# Colors http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#999999", "#DC143C")
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
max(anthony$Score)
anthony
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
warnings()
is.na(anthony)
any(is.na(anthony))
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
albert <- read.table("scores_Albert.txt", quote="\"")
albert$index = 1:nrow(albert)
albert$highscore = 0
colnames(albert) = c("Score", "Index", "High_Score")
# Get list of new high scores
max = 0
high_scores = c()
high_index = c()
for(i in 1:nrow(albert)){
if(albert$Score[i]>max){
high_scores = c(high_scores, albert$Score[i])
high_index = c(high_index, i)
max = albert$Score[i]
albert[i, 3] = 1
}
}
# Scatter plot with high scores labeled
# Colors http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#999999", "#DC143C")
ggplot(data=albert, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Albert's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
anthony$highscore = 0
colnames(anthony) = c("Score", "Index", "High_Score")
argmax(anthony$Score)
which.max(anthony$Score)
anthony <- read.table("scores_Anthony.txt", quote="\"")
anthony$index = 1:nrow(anthony)
anthony$highscore = 0
colnames(anthony) = c("Score", "Index", "High_Score")
# Mark high score
anthony$High_Score[which.max(anthony$Score) = 1
# Scatter plot with high scores labeled
# Colors http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#999999", "#DC143C")
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
anthony
anthony$High_Score[which.max(anthony$Score)] = 1
# Scatter plot with high scores labeled
# Colors http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#999999", "#DC143C")
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
cbPalette <- c("#999999", "#DC143C")
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=albert, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 230)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(-0.5, 230)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=anthony, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 230)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
dim(anthony)
ggplot(data=anthony, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=3, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(albert$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Albert's Scores")
ggplot(data=anthony, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=3, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(anthony$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Albert's Scores")
ggplot(data=anthony, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=3, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(anthony$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Anthony's Scores")
ggplot(data=anthony, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=5, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(anthony$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Anthony's Scores")
max(anthony$score)
max(anthony$scores)
max(anthony$Scores)
max(anthony$Score)
sort(anthony$Score)
anthony[-which.max(anthony$Score)]
anthony[-32,]
anthony[-which.max(anthony$Score),]
anthony2 = anthony[-which.max(anthony$Score),]
ggplot(data=anthony2, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
scale_colour_manual(values=cbPalette, labels=c("New Score","High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 230)) +
labs(title = "Anthony's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
# Histogram of Density
ggplot(data=anthony, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=5, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(anthony$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Anthony's Scores")
ggplot(data=anthony2, aes(x=Score)) +
geom_histogram(aes(y = ..density..), binwidth=5, color = "white", fill="gray") +
#geom_density(color="#009E73") +
stat_function(fun = dgeom, args = list(x=seq(0,100), prob=1/mean(anthony$Score)),
aes(color="#E69F00"), size=1.5) +
theme(panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.title = element_blank(), legend.key = element_blank(),
legend.text = element_text(colour="brown", size=12,face = "bold"),
legend.justification = c(1,1), legend.position = c(1,1)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_colour_manual(values = c("#E69F00", "blue", "green", "orange"),
labels = c("Theoretical Density")) +
labs(title="Anthony's Scores")
ggplot(data=albert, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
geom_density()
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Albert's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=albert, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
geom_density() +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Albert's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
ggplot(data=albert, aes(Index, Score)) +
geom_point(aes(color = as.factor(High_Score),
shape = as.factor(High_Score))) +
geom_smooth() +
scale_colour_manual(values=cbPalette, labels=c("New Score","New High Score")) +
scale_shape_manual(values=c(1,9), labels=c("New Score","New High Score")) +
scale_y_continuous(expand = c(0,0), limits=c(0, 130)) +
labs(title = "Albert's Scores", x = "Game Number") +
theme(panel.background = element_blank(),
axis.line.y = element_line(colour = "black"),
legend.key = element_blank(),
legend.title = element_blank())
